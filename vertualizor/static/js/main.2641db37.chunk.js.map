{"version":3,"sources":["Components/treeView.tsx","API/Get.tsx","UseStyles/UseStyles.tsx","Components/Post.tsx","Components/Tweet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TreeView","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","responseType","open","setRequestHeader","coockie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","onload","response","status","onerror","e","console","log","message","send","useStyles","createMuiTheme","palette","primary","purple","secondary","main","makeStyles","theme","createStyles","root","display","flexDirection","alignItems","margin","spacing","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Post","props","classes","item","React","useState","like","likes","setLike","useEffect","expanded","setExpanded","CardHeader","Avatar","aria-label","className","title","user","subheader","href","window","location","origin","id","CardContent","Typography","variant","color","component","content","CardActions","disableSpacing","is_retweet","ButtonGroup","Button","onClick","event","object","action","setstate","pre","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Tweet","state","map","index","parentItem","parent","Card","style","width","border","App","ref","useRef","username","setUsername","tweetId","setTweetId","filterUserName","filterPostsId","element","getElementById","dataset","postid","onKeyUp","target","value","onSubmit","preventDefault","current","required","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getelem","ReactDOM","render"],"mappings":"8OAMeA,MAJf,WACE,OAAO,uCCYF,SAASC,EACdC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAgBC,KAAKC,UAAUH,GAC7BI,EAAM,IAAIC,eAChBD,EAAIE,aAAe,OACnBF,EAAIG,KAAKV,EAAT,+BAAyCC,IACzCM,EAAII,iBAAiB,eAAgB,oBACrC,IAAMC,EA1Be,SAACC,GACtB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAOP,EAAO,IAAK,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EAaSU,CAAU,aACtBZ,IACFL,EAAII,iBAAiB,wBAAyB,kBAC9CJ,EAAII,iBAAiB,mBAAoB,kBACzCJ,EAAII,iBAAiB,cAAeC,IAEtCL,EAAIkB,OAAS,WACXvB,EAASK,EAAImB,SAAUnB,EAAIoB,SAE7BpB,EAAIqB,QAAU,SAAUC,GACtBC,QAAQC,IAAIF,GACZ3B,EAAS,CAAE8B,QAAS,4BAA8B,MAEpDzB,EAAI0B,KAAK7B,G,gNCII8B,GArCMC,YAAe,CAClCC,QAAS,CACPC,QAASC,IACTC,UAAW,CACTC,KAAM,cAIMC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACPC,OAAQN,EAAMO,QAAQ,KAG1BC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYd,EAAMe,YAAYC,OAAO,YAAa,CAChDC,SAAUjB,EAAMe,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,YCgHZC,MAnIf,SAAcC,GACZ,IAAMC,EAAUjC,IACVkC,EAAYF,EAAME,KAFE,EAKDC,IAAMC,SAASF,EAAKG,MALnB,mBAKnBC,EALmB,KAKZC,EALY,KAO1BJ,IAAMK,WAAU,WAGdD,EAAQL,EAAKG,QACZ,CAACH,IAXsB,MAaMC,IAAMC,UAAS,GAbrB,mBAanBK,EAbmB,KAaTC,EAbS,KAgD1B,OACE,gCAIE,cAACC,EAAA,EAAD,CACEf,OACE,cAACgB,EAAA,EAAD,CAAQC,aAAW,SAASC,UAAWb,EAAQL,SAOjDmB,MAAOb,EAAKc,KACZC,UACE,mBAAGC,KAAI,UAAKC,OAAOC,SAASC,OAArB,YAA+BnB,EAAKoB,IAA3C,kCAUJ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACGzB,EAAK0B,YAGV,cAACC,EAAA,EAAD,CAAaf,UAAWb,EAAQvB,KAAMoD,gBAAc,EAApD,SAC8B,qBAApB5B,EAAK6B,YACX,eAACC,EAAA,EAAD,CACEN,MAAM,UACNb,aAAW,gCAFb,UAIE,cAACoB,EAAA,EAAD,CAAQpB,aAAW,WAAnB,SAA+B,cAAC,IAAD,MAC/B,eAACoB,EAAA,EAAD,CAAQC,QApElB,SAA2BC,GAQzBtG,EAAO,OAAQ,mBAPf,SAAkB2B,EAAeC,GAEjB,KAAVA,IACF8C,EAAQ/C,EAAS,GAAG6C,MACpBzC,QAAQC,IAAI,CAAEuE,OAAQ5E,EAAS,GAAG6C,UAGM,CAC1CgC,OAAQ,OACRf,GAAIpB,EAAKoB,MA0DiCT,aAAW,mBAA/C,UACGP,EADH,IACU,cAAC,IAAD,OAEV,cAAC2B,EAAA,EAAD,CAAQC,QA1DlB,SAAuBC,GAWrBtG,EAAO,OAAQ,mBAVf,SAAkB2B,EAAeC,GAE/BD,EAASoE,QACP,uFACY,KAAVnE,GACFuC,EAAMsC,UAAS,SAACC,GACd,MAAM,CAAE/E,GAAR,mBAAqB+E,SAIiB,CAC1CF,OAAQ,UACRf,GAAIpB,EAAKoB,MA6C6BT,aAAW,QAA3C,SACE,cAAC,IAAD,MAEF,cAACoB,EAAA,EAAD,CACEnB,UAAW0B,YAAKvC,EAAQd,OAAT,eACZc,EAAQN,WAAac,IAExByB,QAlFc,WACxBxB,GAAaD,IAkFHgC,gBAAehC,EACfI,aAAW,YANb,SAQE,cAAC,IAAD,WAKR,cAAC6B,EAAA,EAAD,CAAUC,GAAIlC,EAAUmC,QAAQ,OAAOC,eAAa,EAApD,SACE,eAACtB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYsB,WAAS,EAArB,qBACA,cAACtB,EAAA,EAAD,CAAYsB,WAAS,EAArB,2GAIA,cAACtB,EAAA,EAAD,CAAYsB,WAAS,EAArB,yBACA,cAACtB,EAAA,EAAD,CAAYsB,WAAS,EAArB,gaAQA,cAACtB,EAAA,EAAD,6F,QCtHKuB,MAnBf,SAAeC,EAAYV,GAEzB,OADcU,EAAM9F,OAAS,EAAI8F,EAAQ,CAACA,IAC7BC,KAAI,SAAC/C,EAAYgD,GAC5B,IAAMC,EAAU,2BACXjD,EAAKkD,QADM,IAEdpC,KAAMd,EAAKc,OAEb,OACE,eAACqC,EAAA,EAAD,CAAkBC,MAAO,CAAEC,MAAO,MAAOzE,OAAQ,QAAjD,UACGoB,EAAKkD,QACJ,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAExE,OAAQ,OAAQ0E,OAAQ,OAAvC,SACE,cAAC,EAAD,CAAMlB,SAAUA,EAAUpC,KAAMiD,MAGpC,cAAC,EAAD,CAAMb,SAAUA,EAAUpC,KAAMA,GAAWgD,KANlCA,OCwEFO,MA3Ef,WAAgB,IAAD,EACatD,IAAMC,SAAc,IADjC,mBACN4C,EADM,KACCV,EADD,KAEPoB,EAAWvD,IAAMwD,SAFV,EAmBmBxD,IAAMC,SAAS,IAnBlC,mBAmBNwD,EAnBM,KAmBIC,EAnBJ,OAoBiB1D,IAAMC,SAAS,IApBhC,mBAoBN0D,EApBM,KAoBGC,EApBH,KAiDb,OA3BA5D,IAAMK,WAAU,WACd,IAQMwD,EAAiBJ,EAAS1G,OAAS,EAAI,aAAe0G,EAAW,GACjEK,EAAgBH,EAAQ5G,OAAS,EAAjB,UAAwB4G,GAAY,GAEpDI,EAAUrH,SAASsH,eAAe,QAExCtI,EACE,MACA,iBACmC,oBAA1BqI,EAAQE,QAAQC,OACnB,GACAH,EAAQE,QAAQC,QAEpBJ,EACAD,GArBe,SAACxG,EAAeC,GAG/B6E,EADa,MAAX7E,EACOD,EAEA,CAAC,4BAmBb,CAACoG,EAAUE,IAKZ,cAFA,CAEA,OAAKhD,UAAU,MAAf,UACE,uBACEwD,QAAS,SAAC3G,GACRkG,EAAYlG,EAAE4G,OAAOC,UAGzB,uBACEF,QAAS,SAAC3G,GACRoG,EAAWpG,EAAE4G,OAAOC,UAGxB,uBAAMC,SA5DV,SAAsBtC,GACpBA,EAAMuC,iBAaN7I,EAAO,OAAQ,YAXE,SAAC2B,EAAgBC,GACjB,MAAXA,GACF6E,GAAS,SAACC,GAAD,MAAkB,CAAI/E,GAAJ,mBAAiB+E,OAC5CmB,EAAIiB,QAAQH,MAAQ,KAEpB5G,QAAQC,IAAIL,EAAUC,GACP,MAAXA,IACF0D,OAAOC,SAASF,KAAO,qBAIQ,CAAEU,QAZxB8B,EAAIiB,QAAQH,SA0DzB,UACE,0BAAUd,IAAKA,EAAKkB,UAAQ,IAC5B,wBAAQC,KAAK,SAAb,uBAEF,cAAC,EAAD,IAEC9B,EAAMC,EAAOV,OChELwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJRQ,EAAU1I,SAASsH,eAAe,QACxCoB,GAAWC,IAASC,OAAO,cAAC,EAAD,IAASF,GAKpCT,M","file":"static/js/main.2641db37.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TreeView() {\n  return <div>xxx</div>;\n}\n\nexport default TreeView;\n","const getCookie: any = (name: string) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nexport function lookup(\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n  endpoint?: \"/posts/\" | string,\n  callback?: Function | any,\n  data?: any\n) {\n  let jsonData: any = JSON.stringify(data);\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"json\";\n  xhr.open(method, `http://localhost:8000${endpoint}`);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  const coockie = getCookie(\"csrftoken\");\n  if (coockie) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-with\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", coockie);\n  }\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(jsonData);\n}\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: {\n      main: \"#e57373\",\n    },\n  },\n});\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  })\n);\nexport default useStyles;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { lookup } from \"../API/Get\";\nimport { Props } from \"../Types/Types\";\nimport useStyles from \"../UseStyles/UseStyles\";\nimport { TimerOutlined } from \"@material-ui/icons\";\nimport { TIMEOUT } from \"dns\";\nfunction Post(props: Props) {\n  const classes = useStyles();\n  const item: any = props.item;\n  // const [isover, setMouse] = React.useState(false);\n\n  const [likes, setLike] = React.useState(item.like);\n\n  React.useEffect(() => {\n    //this to rerender like button\n    //without it the new post will take the same info  of the last post.\n    setLike(item.like);\n  }, [item]);\n\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  function handlClikeLikeBtn(event: any) {\n    function callBack(response: any, status: number) {\n      // console.log(response, status, item);\n      if (status == 200) {\n        setLike(response[0].like);\n        console.log({ object: response[0].like });\n      }\n    }\n    lookup(\"POST\", \"/posts/actions/\", callBack, {\n      action: \"like\",\n      id: item.id,\n    });\n  }\n  function handleRetweet(event: any) {\n    function callBack(response: any, status: any) {\n      // console.log(response);\n      response.content =\n        \"parent post later you shoul be able to edit it befre retweeting and after retweeting\";\n      if (status == 201) {\n        props.setstate((pre: any) => {\n          return [response, ...pre];\n        });\n      }\n    }\n    lookup(\"POST\", \"/posts/actions/\", callBack, {\n      action: \"retweet\",\n      id: item.id,\n      // user: item.user,\n    });\n  }\n  return (\n    <div\n    // onMouseEnter={() => setMouse(true)}\n    // onMouseLeave={() => setMouse(false)}\n    >\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}></Avatar>\n        }\n        // action={\n        //   <Button aria-label=\"settings\">\n        //     {isover && <MoreVertIcon />}\n        //   </Button>\n        // }\n        title={item.user}\n        subheader={\n          <a href={`${window.location.origin}/${item.id}`}>\n            September 14, 2016\n          </a>\n        }\n      />\n      {/* <CardMedia\n        className={classes.media}\n        image=\"https://www.princeton.edu/sites/default/files/styles/half_2x/public/images/2018/01/clouds-19.jpg?itok=Qfa5j6NW\"\n        title=\"Paella dish\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {item.content}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.root} disableSpacing>\n        {typeof item.is_retweet !== \"undefined\" && (\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <Button aria-label=\"settings\">{<MoreVertIcon />}</Button>\n            <Button onClick={handlClikeLikeBtn} aria-label=\"add to favorites\">\n              {likes} <ThumbUpAltOutlinedIcon />\n            </Button>\n            <Button onClick={handleRetweet} aria-label=\"share\">\n              <ShareIcon />\n            </Button>\n            <Button\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </Button>\n          </ButtonGroup>\n        )}\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and\n            set aside for 10 minutes.\n          </Typography>\n          <Typography paragraph>text herer.</Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and\n            peppers, and cook without stirring, until most of the liquid is\n            absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved\n            shrimp and mussels, tucking them down into the rice, and cook again\n            without stirring, until mussels have opened and rice is just tender,\n            5 to 7 minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then\n            serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post\";\nimport Card from \"@material-ui/core/Card\";\nimport { Item } from \"../Types/Types\";\nfunction Tweet(state: any, setstate: Function) {\n  const items = state.length > 0 ? state : [state];\n  return items.map((item: Item, index: number) => {\n    const parentItem = {\n      ...item.parent,\n      user: item.user,\n    };\n    return (\n      <Card key={index} style={{ width: \"50%\", margin: \"10px\" }}>\n        {item.parent && (\n          <Card style={{ margin: \"50px\", border: \"red\" }}>\n            <Post setstate={setstate} item={parentItem} />\n          </Card>\n        )}\n        <Post setstate={setstate} item={item} key={index} />\n      </Card>\n    );\n  });\n}\nexport default Tweet;\n","import React from \"react\";\nimport \"./App.css\";\nimport TreeView from \"./Components/treeView\";\nimport { lookup } from \"./API/Get\";\nimport Tweet from \"./Components/Tweet\";\nimport { Item } from \"./Types/Types\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./UseStyles/UseStyles\";\n\nfunction App() {\n  const [state, setstate] = React.useState<any>([]);\n  const ref: any = React.useRef();\n  function handleSubmit(event: any) {\n    event.preventDefault();\n    let newTweet = ref.current.value;\n    const callback = (response: Item, status: number) => {\n      if (status === 201) {\n        setstate((pre: any) => (pre = [response, ...pre]));\n        ref.current.value = \"\";\n      } else {\n        console.log(response, status);\n        if (status === 403) {\n          window.location.href = \"accounts/login\";\n        }\n      }\n    };\n    lookup(\"POST\", \"/create/\", callback, { content: newTweet });\n  }\n  const [username, setUsername] = React.useState(\"\");\n  const [tweetId, setTweetId] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const myCallback = (response: any, status: any) => {\n      // console.log(response);\n      if (status === 200) {\n        setstate(response);\n      } else {\n        setstate([\"There was an error\"]);\n      }\n    };\n    const filterUserName = username.length > 0 ? \"?username=\" + username : \"\";\n    const filterPostsId = tweetId.length > 0 ? `${tweetId}` : \"\";\n    // console.log(window.location.pathname);\n    const element = document.getElementById(\"root\")!;\n    // console.log(element.dataset);\n    lookup(\n      \"GET\",\n      `/posts/${\n        typeof element.dataset.postid == \"undefined\"\n          ? \"\"\n          : element.dataset.postid\n      }` +\n        filterPostsId +\n        filterUserName,\n      myCallback\n    );\n  }, [username, tweetId]);\n\n  return (\n    // 🔴later users can change the theme.\n    // <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      <input\n        onKeyUp={(e: any) => {\n          setUsername(e.target.value);\n        }}\n      />\n      <input\n        onKeyUp={(e: any) => {\n          setTweetId(e.target.value);\n        }}\n      />\n      <form onSubmit={handleSubmit}>\n        <textarea ref={ref} required />\n        <button type=\"submit\">submit</button>\n      </form>\n      <TreeView />\n      {/* // creating new post don't re-render the post component. */}\n      {Tweet(state, setstate)}\n    </div>\n    // </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nconst getelem = document.getElementById(\"root\");\ngetelem && ReactDOM.render(<App />, getelem);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}